name: Mobile CI/CD

on:
  pull_request:
    paths:
      - 'mobile/**'
      - '.github/workflows/mobile-ci-cd.yml'
  push:
    branches:
      - main
      - develop
    paths:
      - 'mobile/**'
      - '.github/workflows/mobile-ci-cd.yml'

env:
  NODE_VERSION: '18.x'

jobs:
  lint:
    name: Lint Mobile Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json

      - name: Install dependencies
        working-directory: mobile
        run: npm ci

      - name: Run ESLint
        working-directory: mobile
        run: npm run lint

      - name: Run Prettier check
        working-directory: mobile
        run: npm run format:check

  typecheck:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json

      - name: Install dependencies
        working-directory: mobile
        run: npm ci

      - name: Run TypeScript compiler check
        working-directory: mobile
        run: npm run typecheck

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json

      - name: Install dependencies
        working-directory: mobile
        run: npm ci

      - name: Run tests with coverage
        working-directory: mobile
        run: npm run test -- --coverage --watchAll=false

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./mobile/coverage/coverage-final.json
          flags: mobile
          name: mobile-coverage

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: [lint, typecheck, test]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install dependencies
        working-directory: mobile
        run: npm ci

      - name: Build Android APK
        working-directory: mobile/android
        run: ./gradlew assembleRelease

      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-${{ github.sha }}
          path: mobile/android/app/build/outputs/apk/release/*.apk
          retention-days: 30

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: [lint, typecheck, test]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json

      - name: Install dependencies
        working-directory: mobile
        run: npm ci

      - name: Install Pods
        working-directory: mobile/ios
        run: pod install

      - name: Build iOS
        working-directory: mobile/ios
        run: |
          xcodebuild -workspace YourApp.xcworkspace \
            -scheme YourApp \
            -configuration Release \
            -archivePath $PWD/build/YourApp.xcarchive \
            clean archive

      - name: Upload iOS Archive
        uses: actions/upload-artifact@v4
        with:
          name: ios-archive-${{ github.sha }}
          path: mobile/ios/build/*.xcarchive
          retention-days: 30
